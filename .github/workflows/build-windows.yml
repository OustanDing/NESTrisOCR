name: PyInstaller-windows

on: push
  branches:
    - master #only on master branch
  tags:
    - 202* #any tag in the form 2020mmdd
        

jobs:
  build:

    runs-on: windows-latest
    defaults:
      run:
        working-directory: scripts/build-windows
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7    
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash        
    - name: Install dependencies
      run: |
        build-windows.bat ${{ steps.get_version.outputs.VERSION }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          working-directory: ${{ env.working-directory }}
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: ${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
        